<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlackBox</name>
    </assembly>
    <members>
        <member name="T:BlackBox.AssemblyCollection">
            <summary>
            Represents a strongly typed list of assemblies that can be accessed by index.
            </summary>
        </member>
        <member name="M:BlackBox.AssemblyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.AssemblyCollection"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.AssemblyCollection.GetEnumerator">
            <summary>
            Gets the enumerator that iterates through the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlackBox.AssemblyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:BlackBox.AssemblyCollection.Add(System.Reflection.Assembly)">
            <summary>
            Adds the specified assembly to the collection.
            </summary>
            <param name="assembly">The assembly.</param>
        </member>
        <member name="M:BlackBox.AssemblyCollection.AddRange(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Adds the specified assemblies to the collection.
            </summary>
            <param name="assemblies">The assemblies.</param>
        </member>
        <member name="M:BlackBox.AssemblyCollection.Remove(System.Reflection.Assembly)">
            <summary>
            Removes the specified assembly from the collection.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.AssemblyCollection.Clear">
            <summary>
            Removes all assemblies from the collection.
            </summary>
        </member>
        <member name="P:BlackBox.AssemblyCollection.Count">
            <summary>
            Gets the number of assemblies contained in the collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:BlackBox.AssemblyCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Reflection.Assembly"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:BlackBox.LogFilterCollection">
            <summary>
            Represents a strongly typed list of log filters that can be accessed by index.
            </summary>
        </member>
        <member name="M:BlackBox.LogFilterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.LogFilterCollection"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.LogFilterCollection.GetEnumerator">
            <summary>
            Gets the enumerator that iterates through the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogFilterCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:BlackBox.LogFilterCollection.Add(BlackBox.LogFilter)">
            <summary>
            Adds the specified filter to the collection.
            </summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:BlackBox.LogFilterCollection.AddRange(System.Collections.Generic.IEnumerable{BlackBox.LogFilter})">
            <summary>
            Adds the specified log filters to the collection.
            </summary>
            <param name="filters">The filters.</param>
        </member>
        <member name="M:BlackBox.LogFilterCollection.Remove(BlackBox.LogFilter)">
            <summary>
            Removes the specified log filter from the collection.
            </summary>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogFilterCollection.Clear">
            <summary>
            Removes all log filters from the collection.
            </summary>
        </member>
        <member name="P:BlackBox.LogFilterCollection.Count">
            <summary>
            Gets the number of log filters in the collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:BlackBox.LogFilterCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:BlackBox.LogFilter"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:BlackBox.IndexedLinkedList`1.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlackBox.IndexedLinkedList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:BlackBox.LogSinkCollection">
            <summary>
            Represents a strongly typed list of log sinks that can be accessed by index.
            </summary>
        </member>
        <member name="M:BlackBox.LogSinkCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.LogSinkCollection"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.LogSinkCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:BlackBox.LogSinkCollection.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:BlackBox.LogSinkCollection.GetEnumerator">
            <summary>
            Gets the enumerator that iterates through the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogSinkCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:BlackBox.LogSinkCollection.Add(BlackBox.LogSink)">
            <summary>
            Adds the specified log sink to the collection.
            </summary>
            <param name="sink">The sink.</param>
        </member>
        <member name="M:BlackBox.LogSinkCollection.AddRange(System.Collections.Generic.IEnumerable{BlackBox.LogSink})">
            <summary>
            Adds the specified log sinks to the current collection.
            </summary>
            <param name="sinks">The sinks.</param>
        </member>
        <member name="M:BlackBox.LogSinkCollection.Remove(BlackBox.LogSink)">
            <summary>
            Removes the specified log sink from the collection.
            </summary>
            <param name="sink">The sink.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogSinkCollection.Clear">
            <summary>
            Removes all log sinks from the collection.
            </summary>
        </member>
        <member name="P:BlackBox.LogSinkCollection.Count">
            <summary>
            Gets the number of log sinks contained in the collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:BlackBox.LogSinkCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:BlackBox.LogSink"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:BlackBox.LoggerExtensions">
            <summary>
            Contains extension methods for <see cref="T:BlackBox.ILogger"/>.
            </summary>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Fatal(BlackBox.ILogger,System.String)">
            <summary>
            Creates a new log entry with the log level 'Fatal'.
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Fatal(BlackBox.ILogger,System.String,System.Object[])">
            <summary>
            Creates a new log entry with the log level 'Fatal'.
            </summary>
            <param name="logger"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Error(BlackBox.ILogger,System.String)">
            <summary>
            Creates a new log entry with the log level 'Error'.
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Error(BlackBox.ILogger,System.String,System.Object[])">
            <summary>
            Creates a new log entry with the log level 'Error'.
            </summary>
            <param name="logger"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Warning(BlackBox.ILogger,System.String)">
            <summary>
            Creates a new log entry with the log level 'Warning'.
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Warning(BlackBox.ILogger,System.String,System.Object[])">
            <summary>
            Creates a new log entry with the log level 'Warning'.
            </summary>
            <param name="logger"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Information(BlackBox.ILogger,System.String)">
            <summary>
            Creates a new log entry with the log level 'Information'.
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Information(BlackBox.ILogger,System.String,System.Object[])">
            <summary>
            Creates a new log entry with the log level 'Information'.
            </summary>
            <param name="logger"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Verbose(BlackBox.ILogger,System.String)">
            <summary>
            Creates a new log entry with the log level 'Verbose'.
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Verbose(BlackBox.ILogger,System.String,System.Object[])">
            <summary>
            Creates a new log entry with the log level 'Verbose'.
            </summary>
            <param name="logger"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Debug(BlackBox.ILogger,System.String)">
            <summary>
            Creates a new log entry with the log level 'Debug'.
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:BlackBox.LoggerExtensions.Debug(BlackBox.ILogger,System.String,System.Object[])">
            <summary>
            Creates a new log entry with the log level 'Debug'.
            </summary>
            <param name="logger"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="T:BlackBox.Formatting.FormatTransformer">
            <summary>
            Represents a format transformer that is used to transform
            the output of a <see cref="T:BlackBox.Formatting.FormatRenderer"/>.
            </summary>
        </member>
        <member name="T:BlackBox.Formatting.FormatRenderer">
            <summary>
            Represents a format renderer that is used to render a part of a format pattern.
            </summary>
        </member>
        <member name="M:BlackBox.Formatting.FormatRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.Formatting.FormatRenderer"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.Formatting.FormatRenderer.Render(BlackBox.ILogEntry)">
            <summary>
            Renders the format pattern part using the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.Formatting.FormatTransformer.#ctor(BlackBox.Formatting.FormatRenderer)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.Formatting.FormatTransformer"/> class.
            </summary>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:BlackBox.Formatting.FormatTransformer.Render(BlackBox.ILogEntry)">
            <summary>
            Renders the format pattern part using the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.Formatting.FormatTransformer.Transform(System.String)">
            <summary>
            Transforms the specified text, which is the output of a format renderer.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="P:BlackBox.Formatting.FormatTransformer.Renderer">
            <summary>
            Gets the renderer whose value we're transforming.
            </summary>
            <value>The renderer.</value>
        </member>
        <member name="T:BlackBox.IInternalLogger">
            <summary>
            The internal logger contract interface.
            </summary>
        </member>
        <member name="M:BlackBox.IInternalLogger.Write(BlackBox.LogLevel,System.String)">
            <summary>
            Writes a message to the internal log.
            </summary>
            <param name="level">The log level.</param>
            <param name="message">The message.</param>
        </member>
        <member name="P:BlackBox.IInternalLogger.Enabled">
            <summary>
            Gets or sets a value indicating whether the internal log is enabled.
            </summary>
            <value>
              <c>true</c> if the internal log is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlackBox.IInternalLogger.Threshold">
            <summary>
            Gets or sets the log level threshold.
            </summary>
            <value>
            The level.
            </value>
        </member>
        <member name="T:BlackBox.InitializationContext">
            <summary>
            The BlackBox initialization context.
            More or less a container for stuff that's needed while initializing a filter or a sink.
            </summary>
        </member>
        <member name="M:BlackBox.InitializationContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:BlackBox.InitializationContext.FormatPatternFactory">
            <summary>
            Gets the format pattern factory.
            </summary>
            <value>The format pattern factory.</value>
        </member>
        <member name="P:BlackBox.InitializationContext.ConditionFactory">
            <summary>
            Gets the condition factory.
            </summary>
        </member>
        <member name="P:BlackBox.InitializationContext.InternalLogger">
            <summary>
            Gets the internal logger.
            </summary>
        </member>
        <member name="T:BlackBox.SkipSerializationAttribute">
            <summary>
            Attribute that is used to decorate properties that should not
            be serialized by the log configuration serializer.
            </summary>
        </member>
        <member name="T:BlackBox.ConditionException">
            <summary>
            Represent errors that occur in condition expressions.
            </summary>
        </member>
        <member name="T:BlackBox.BlackBoxException">
            <summary>
            Represent errors that occur in BlackBox.
            </summary>
        </member>
        <member name="M:BlackBox.BlackBoxException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.BlackBoxException"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.BlackBoxException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.BlackBoxException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:BlackBox.BlackBoxException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.BlackBoxException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:BlackBox.BlackBoxException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.BlackBoxException"/> class.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:BlackBox.BlackBoxException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.BlackBoxException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="M:BlackBox.ConditionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.ConditionException"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.ConditionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.ConditionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:BlackBox.ConditionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.ConditionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:BlackBox.ConditionException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.ConditionException"/> class.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:BlackBox.LogConfiguration">
            <summary>
            Represents a log configuration.
            </summary>
        </member>
        <member name="M:BlackBox.LogConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.LogConfiguration"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.LogConfiguration.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:BlackBox.LogConfiguration.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:BlackBox.LogConfiguration.FromConfigSection">
            <summary>
            Loads a log configuration the section 'BlackBox' in App.config or Web.config.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogConfiguration.FromConfigSection(System.String)">
            <summary>
            Loads a log configuration from the specified section in App.config or Web.config.
            </summary>
            <param name="section">The section.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogConfiguration.FromXml(System.String)">
            <summary>
            Loads a log configuration from XML in a <see cref="T:System.String"/>.
            </summary>
            <param name="xml">The XML.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogConfiguration.FromXml(System.Xml.Linq.XDocument)">
            <summary>
            Loads a log configuration from  a <see cref="T:System.Xml.Linq.XDocument"/>
            </summary>
            <param name="document">The document.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogConfiguration.FromXml(System.Xml.XmlReader)">
            <summary>
            Loads a log configuration from a <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The XML reader.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogConfiguration.FromXml(System.IO.FileInfo)">
            <summary>
            Loads a log configuration from a <see cref="T:System.IO.FileInfo"/>.
            </summary>
            <param name="file">The XML file.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogConfiguration.Save(System.IO.Stream)">
            <summary>
            Saves the log configuration to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:BlackBox.LogConfiguration.Save(System.IO.FileInfo)">
            <summary>
            Saves the log configuration to the specified file.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="P:BlackBox.LogConfiguration.Sinks">
            <summary>
            Gets the log sinks.
            </summary>
            <value>The log sinks.</value>
        </member>
        <member name="P:BlackBox.LogConfiguration.Assemblies">
            <summary>
            Gets the assemblies.
            </summary>
            <value>The assemblies.</value>
        </member>
        <member name="P:BlackBox.LogConfiguration.Filters">
            <summary>
            Gets the log filters.
            </summary>
            <value>The log filters.</value>
        </member>
        <member name="P:BlackBox.LogConfiguration.InternalLogger">
            <summary>
            Gets the internal logger.
            </summary>
        </member>
        <member name="T:BlackBox.ConditionFilter">
            <summary>
            Log filter that matches when the specified condition evaluates to true.
            </summary>
        </member>
        <member name="T:BlackBox.LogFilter">
            <summary>
            The base class for a log filter.
            </summary>
        </member>
        <member name="M:BlackBox.LogFilter.Initialize(BlackBox.InitializationContext)">
            <summary>
            Initializes the specified log filter.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:BlackBox.LogFilter.Evaluate(BlackBox.ILogEntry)">
            <summary>
            Evaluates the specified entry against the log filter.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="M:BlackBox.ConditionFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.ConditionFilter"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.ConditionFilter.Initialize(BlackBox.InitializationContext)">
            <summary>
            Initializes the log filter.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BlackBox.ConditionFilter.Evaluate(BlackBox.ILogEntry)">
            <summary>
            Evaluates the specified entry against the log filter.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="P:BlackBox.ConditionFilter.Condition">
            <summary>
            Gets or sets the condition that will be used by the filter.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="P:BlackBox.ConditionFilter.Action">
            <summary>
            Gets or sets the action that will be used if the
            condition evaluates to true.
            </summary>
            <value>The action.</value>
        </member>
        <member name="T:BlackBox.LevelMatchFilter">
            <summary>
            Log filter that matches when the log level is equal to the specified log level.
            </summary>
        </member>
        <member name="M:BlackBox.LevelMatchFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.LevelMatchFilter"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.LevelMatchFilter.Initialize(BlackBox.InitializationContext)">
            <summary>
            Initializes the log filter.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BlackBox.LevelMatchFilter.Evaluate(BlackBox.ILogEntry)">
            <summary>
            Evaluates the specified entry against the log filter.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="P:BlackBox.LevelMatchFilter.Level">
            <summary>
            Gets or sets the log level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:BlackBox.LevelMatchFilter.Action">
            <summary>
            Gets or sets the action that will be used if the
            log entry's log level match the provided log level.
            </summary>
            <value>The action.</value>
        </member>
        <member name="T:BlackBox.LevelRangeFilter">
            <summary>
            Log filter that matches when the log level is within a specific range.
            </summary>
        </member>
        <member name="M:BlackBox.LevelRangeFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.LevelRangeFilter"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.LevelRangeFilter.Initialize(BlackBox.InitializationContext)">
            <summary>
            Initializes the log filter.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BlackBox.LevelRangeFilter.Evaluate(BlackBox.ILogEntry)">
            <summary>
            Evaluates the specified entry against the log filter.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="P:BlackBox.LevelRangeFilter.MinLevel">
            <summary>
            Gets or sets the minimum level.
            </summary>
            <value>The min level.</value>
        </member>
        <member name="P:BlackBox.LevelRangeFilter.MaxLevel">
            <summary>
            Gets or sets the maximum level.
            </summary>
            <value>The max level.</value>
        </member>
        <member name="P:BlackBox.LevelRangeFilter.Action">
            <summary>
            Gets or sets the action that will be used if the
            log entry's log level is in the specified range.
            </summary>
            <value>The action.</value>
        </member>
        <member name="T:BlackBox.Formatting.FormatPattern">
            <summary>
            Represents a format pattern.
            </summary>
        </member>
        <member name="M:BlackBox.Formatting.FormatPattern.#ctor(System.String,BlackBox.Formatting.FormatRenderer[])">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.Formatting.FormatPattern"/> class.
            </summary>
            <param name="format">The format.</param>
            <param name="renderers">The renderers.</param>
        </member>
        <member name="P:BlackBox.Formatting.FormatPattern.Format">
            <summary>
            Gets the format that was used to create the format pattern.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:BlackBox.Formatting.FormatPatternFactory">
            <summary>
            Factory class for creating format patterns.
            </summary>
        </member>
        <member name="M:BlackBox.Formatting.FormatPatternFactory.Create(System.String)">
            <summary>
            Creates a format pattern from the specified string pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="T:BlackBox.Formatting.FormatRendererTypeAttribute">
            <summary>
            Attribute that is used to decorate format renderers.
            </summary>
        </member>
        <member name="M:BlackBox.Formatting.FormatRendererTypeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.Formatting.FormatRendererTypeAttribute"/> class.
            </summary>
            <param name="name">The name of the format renderer.</param>
        </member>
        <member name="P:BlackBox.Formatting.FormatRendererTypeAttribute.Name">
            <summary>
            Gets the name of the format renderer.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:BlackBox.FormatPatternException">
            <summary>
            Represent errors that occur in format patterns.
            </summary>
        </member>
        <member name="M:BlackBox.FormatPatternException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.FormatPatternException"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.FormatPatternException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.FormatPatternException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:BlackBox.FormatPatternException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.FormatPatternException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:BlackBox.FormatPatternException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.FormatPatternException"/> class.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:BlackBox.ILogKernel">
            <summary>
            The log kernel contract interface.
            </summary>
        </member>
        <member name="M:BlackBox.ILogKernel.GetLogger">
            <summary>
            Gets the logger for the calling type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlackBox.ILogKernel.GetLogger(System.Type)">
            <summary>
            Gets the logger for the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:BlackBox.ILogEntry">
            <summary>
            The log entry contract interface.
            </summary>
        </member>
        <member name="P:BlackBox.ILogEntry.Exception">
            <summary>
            Gets the associated exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:BlackBox.ILogEntry.Level">
            <summary>
            Gets the log level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:BlackBox.ILogEntry.Message">
            <summary>
            Gets the log message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:BlackBox.ILogEntry.Source">
            <summary>
            Gets the logger source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:BlackBox.ILogEntry.ThreadId">
            <summary>
            Gets the id of the thread that the log entry was created on.
            </summary>
            <value>The thread id.</value>
        </member>
        <member name="P:BlackBox.ILogEntry.ThreadName">
            <summary>
            Gets the name of the thread that the log entry was created on.
            </summary>
            <value>The name of the thread.</value>
        </member>
        <member name="P:BlackBox.ILogEntry.Timestamp">
            <summary>
            Gets the time when the log entry was created.
            </summary>
            <value>The timestamp.</value>
        </member>
        <member name="T:BlackBox.ILogger">
            <summary>
            The logger contract interface.
            </summary>
        </member>
        <member name="M:BlackBox.ILogger.Write(BlackBox.LogLevel,System.String)">
            <summary>
            Creates a new log entry.
            </summary>
            <param name="level">The log level.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:BlackBox.ILogger.Write(BlackBox.LogLevel,System.String,System.Object[])">
            <summary>
            Creates a new log entry.
            </summary>
            <param name="level">The log level.</param>
            <param name="format">The format.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:BlackBox.ILogger.Write(BlackBox.LogLevel,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Creates a new log entry.
            </summary>
            <param name="level">The log level.</param>
            <param name="provider">The format provider.</param>
            <param name="format">The format.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:BlackBox.ILogger.Write(BlackBox.LogLevel,System.Exception)">
            <summary>
            Creates a new log entry.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:BlackBox.ILogger.Write(BlackBox.LogLevel,System.Exception,System.String)">
            <summary>
            Creates a new log entry.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:BlackBox.ILogger.Write(BlackBox.LogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Creates a new log entry.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception.</param>
            <param name="provider">The format provider.</param>
            <param name="format">The format.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:BlackBox.ILogger.Write(BlackBox.LogLevel,System.Exception,System.String,System.Object[])">
            <summary>
            Creates a new log entry.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception.</param>
            <param name="format">The format.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="P:BlackBox.ILogger.Source">
            <summary>
            Gets the logger source type.
            </summary>
            <value>The source.</value>
        </member>
        <member name="T:BlackBox.LogFilterResult">
            <summary>
            Represents a log filter result returned by a log filter.
            </summary>
        </member>
        <member name="F:BlackBox.LogFilterResult.Neutral">
            <summary>
            The log filter do not care or do not want to decide 
            if the <see cref="T:BlackBox.ILogEntry"/> is filtered or not.
            </summary>
        </member>
        <member name="F:BlackBox.LogFilterResult.Accept">
            <summary>
            The <see cref="T:BlackBox.ILogEntry"/> should be logged.
            </summary>
        </member>
        <member name="F:BlackBox.LogFilterResult.Filter">
            <summary>
            The <see cref="T:BlackBox.ILogEntry"/> should not be logged.
            </summary>
        </member>
        <member name="T:BlackBox.LogFilterTypeAttribute">
            <summary>
            Attribute that is used to decorate log filters.
            </summary>
        </member>
        <member name="M:BlackBox.LogFilterTypeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.LogFilterTypeAttribute"/> class.
            </summary>
            <param name="name">The name of the log filter.</param>
        </member>
        <member name="P:BlackBox.LogFilterTypeAttribute.Name">
            <summary>
            Gets the name of the log filter.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:BlackBox.LogKernel">
            <summary>
            The BlackBox logging kernel.
            </summary>
        </member>
        <member name="M:BlackBox.LogKernel.#ctor(BlackBox.LogConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.LogKernel"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:BlackBox.LogKernel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:BlackBox.LogKernel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:BlackBox.LogKernel.GetLogger">
            <summary>
            Gets the logger for the calling type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlackBox.LogKernel.GetLogger(System.Type)">
            <summary>
            Gets the logger for the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:BlackBox.LogLevel">
            <summary>
            Represents the available log levels.
            </summary>
        </member>
        <member name="F:BlackBox.LogLevel.Fatal">
            <summary>
            Fatal log level.
            </summary>
        </member>
        <member name="F:BlackBox.LogLevel.Error">
            <summary>
            Error log level. 
            </summary>
        </member>
        <member name="F:BlackBox.LogLevel.Warning">
            <summary>
            Warning log level.
            </summary>
        </member>
        <member name="F:BlackBox.LogLevel.Information">
            <summary>
            Information log level.
            </summary>
        </member>
        <member name="F:BlackBox.LogLevel.Verbose">
            <summary>
            Verbose log level.
            </summary>
        </member>
        <member name="F:BlackBox.LogLevel.Debug">
            <summary>
            Debug log level.
            </summary>
        </member>
        <member name="T:BlackBox.LogSinkTypeAttribute">
            <summary>
            Attribute that is used to decorate log sinks.
            </summary>
        </member>
        <member name="M:BlackBox.LogSinkTypeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.LogSinkTypeAttribute"/> class.
            </summary>
            <param name="name">The name of the log sink.</param>
        </member>
        <member name="P:BlackBox.LogSinkTypeAttribute.Name">
            <summary>
            Gets the name of the log sink.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:BlackBox.ConsoleSink">
            <summary>
            Log sink that write messages to the standard output stream.
            </summary>
        </member>
        <member name="T:BlackBox.FormatLogSink">
            <summary>
            Base class for a log sink that supports a format pattern.
            </summary>
        </member>
        <member name="T:BlackBox.LogSink">
            <summary>
            The base class for a log sink.
            </summary>
        </member>
        <member name="M:BlackBox.LogSink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.LogSink"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.LogSink.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:BlackBox.LogSink.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:BlackBox.LogSink.Initialize(BlackBox.InitializationContext)">
            <summary>
            Initializes the log sink.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:BlackBox.LogSink.Write(BlackBox.ILogEntry)">
            <summary>
            Writes the specified entry to the log sink.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:BlackBox.LogSink.Write(BlackBox.ILogEntry[])">
            <summary>
            Writes the specified entries to the log sink.
            </summary>
            <param name="entries">The entries.</param>
        </member>
        <member name="M:BlackBox.LogSink.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Performs the writing of the specified entry to the log sink.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:BlackBox.LogSink.WriteEntries(BlackBox.ILogEntry[])">
            <summary>
            Performs the writing of the specified entries to the log sink.
            </summary>
            <param name="entries">The entries.</param>
        </member>
        <member name="P:BlackBox.LogSink.Name">
            <summary>
            Gets or sets the name of the log sink.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:BlackBox.LogSink.Filters">
            <summary>
            Gets the log filters associated with this sink.
            </summary>
            <value>The filters.</value>
        </member>
        <member name="P:BlackBox.LogSink.IsInitialized">
            <summary>
            Gets a value indicating whether this sink has been initialized.
            </summary>
            <value>
            	<c>true</c> if this sink has been initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlackBox.LogSink.InternalLogger">
            <summary>
            Gets the internal logger.
            </summary>
        </member>
        <member name="M:BlackBox.FormatLogSink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.FormatLogSink"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.FormatLogSink.Initialize(BlackBox.InitializationContext)">
            <summary>
            Initializes the log sink.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BlackBox.FormatLogSink.FormatEntry(BlackBox.ILogEntry)">
            <summary>
            Performs formatting of the entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="P:BlackBox.FormatLogSink.Format">
            <summary>
            Gets or sets the format used in the format pattern.
            </summary>
            <value>The format.</value>
        </member>
        <member name="M:BlackBox.ConsoleSink.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Performs the writing of the specified entry to the standard output stream.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="T:BlackBox.EventLogSink">
            <summary>
            Log sink that writes messages to the event log name.
            </summary>
        </member>
        <member name="M:BlackBox.EventLogSink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.EventLogSink"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.EventLogSink.Initialize(BlackBox.InitializationContext)">
            <summary>
            Initializes the log sink.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BlackBox.EventLogSink.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Performs the writing of the specified entry to the event log.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="P:BlackBox.EventLogSink.Source">
            <summary>
            Gets or sets the event source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:BlackBox.EventLogSink.Log">
            <summary>
            Gets or sets the event log name.
            </summary>
            <value>The log.</value>
        </member>
        <member name="P:BlackBox.EventLogSink.MachineName">
            <summary>
            Gets or sets the name of the target machine.
            </summary>
            <value>The name of the machine.</value>
        </member>
        <member name="T:BlackBox.FileSink">
            <summary>
            Log sink that write messages to file.
            </summary>
        </member>
        <member name="M:BlackBox.FileSink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.FileSink"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.FileSink.Initialize(BlackBox.InitializationContext)">
            <summary>
            Initializes the log sink.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BlackBox.FileSink.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:BlackBox.FileSink.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Performs the writing of the specified entry to file.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="P:BlackBox.FileSink.FileName">
            <summary>
            Gets or sets the name of the file.
            This can be a format pattern.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="T:BlackBox.MessageQueueSink">
            <summary>
            Log sink that write messages to a MSMQ queue.
            </summary>
        </member>
        <member name="M:BlackBox.MessageQueueSink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.MessageQueueSink"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.MessageQueueSink.Initialize(BlackBox.InitializationContext)">
            <summary>
            Initializes the log sink.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BlackBox.MessageQueueSink.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Performs the writing of the specified entry to the MSMQ queue.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="P:BlackBox.MessageQueueSink.Queue">
            <summary>
            Gets or sets the name of the queue to write to.
            </summary>
            <value>The queue.</value>
        </member>
        <member name="P:BlackBox.MessageQueueSink.Label">
            <summary>
            Gets or sets the label of the MSMQ message.
            This can be a format pattern.
            </summary>
            <value>The label.</value>
        </member>
        <member name="P:BlackBox.MessageQueueSink.Recoverable">
            <summary>
            Gets or sets a value indicating whether MSMQ messages are recoverable.
            </summary>
            <value><c>true</c> if MSMQ messages are recoverable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:BlackBox.MessageQueueSink.CreateIfNotExists">
            <summary>
            Gets or sets a value indicating whether the MSMQ queue should be created if it do not exist.
            </summary>
            <value><c>true</c> if the MSMQ queue should be created if it do not exist; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:BlackBox.AsyncProxy">
            <summary>
            A log sink proxy that distribute log entries asynchronous.
            </summary>
        </member>
        <member name="T:BlackBox.LogSinkProxy">
            <summary>
            The base class for a log sink proxy.
            </summary>
        </member>
        <member name="M:BlackBox.LogSinkProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.LogSinkProxy"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.LogSinkProxy.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:BlackBox.LogSinkProxy.Sinks">
            <summary>
            Gets the nested sinks.
            </summary>
            <value>The sinks.</value>
        </member>
        <member name="M:BlackBox.AsyncProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.AsyncProxy"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.AsyncProxy.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:BlackBox.AsyncProxy.Initialize(BlackBox.InitializationContext)">
            <summary>
            Initializes the log sink proxy.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:BlackBox.AsyncProxy.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Performs the writing of the specified entry to the log sink.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="T:BlackBox.BufferProxy">
            <summary>
            A log sink proxy that buffers messages and write them
            at once to all the child log sinks when the buffer size threshold have been reached.
            </summary>
        </member>
        <member name="M:BlackBox.BufferProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.BufferProxy"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.BufferProxy.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:BlackBox.BufferProxy.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Performs the writing of the specified entry to the log sink.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:BlackBox.BufferProxy.WriteEntries(BlackBox.ILogEntry[])">
            <summary>
            Performs the writing of the specified entries to the log sink.
            </summary>
            <param name="entries">The entries.</param>
        </member>
        <member name="P:BlackBox.BufferProxy.BufferSize">
            <summary>
            Gets or sets the size of the buffer.
            </summary>
            <value>The size of the buffer.</value>
        </member>
        <member name="T:BlackBox.CircularProxy">
            <summary>
            A log sink proxy that distribute log entries in a round robin fashion.
            </summary>
        </member>
        <member name="M:BlackBox.CircularProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.CircularProxy"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.CircularProxy.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Performs the writing of the specified entries to 
            the nested log sinks in a circular manner.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="T:BlackBox.FunnelProxy">
            <summary>
            Log sink proxy that is used to group log sinks together.
            </summary>
        </member>
        <member name="M:BlackBox.FunnelProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackBox.FunnelProxy"/> class.
            </summary>
        </member>
        <member name="M:BlackBox.FunnelProxy.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Performs the writing of the specified entry to the nested log sinks.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:BlackBox.FunnelProxy.WriteEntries(BlackBox.ILogEntry[])">
            <summary>
            Performs the writing of the specified entries to the nested log sinks.
            </summary>
            <param name="entries">The entries.</param>
        </member>
        <member name="T:BlackBox.TraceSink">
            <summary>
            Log sink that writes messages to the trace output.
            </summary>
        </member>
        <member name="M:BlackBox.TraceSink.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Writes a message to the trace listeners in
            the <see cref="P:System.Diagnostics.Trace.Listeners"/> collection.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="T:BlackBox.DebugSink">
            <summary>
            Log sink that writes messages to the debug output.
            </summary>
        </member>
        <member name="M:BlackBox.DebugSink.WriteEntry(BlackBox.ILogEntry)">
            <summary>
            Writes a message to the trace listeners in 
            the <see cref="P:System.Diagnostics.Debug.Listeners"/> collection.
            </summary>
            <param name="entry">The entry.</param>
        </member>
    </members>
</doc>
